---
title: "Reshaping data"
author: "Andrew Irwin, a.irwin@dal.ca"
date: "2024-02-06"
format:
  revealjs:
    slide-number: true
    theme:  default
    chalkboard: true
    auto-animate: true
    scrollable: true
    code-block-border-left: true
    code-copy: false
    code-link: true
    history: false
    margin: 0.05
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
```

## Overview

* What is tidy data?

* What is the difference between wide and long data?

* Why would you want data in long format?

* Why would you want data in wide format?

* Pivoting data

## Tidy data

* One observation per row

* Each column is a different variable

* There are many ways to organize data. A key idea behind tidy data is to standardize the way data are organized, to make working with data simpler

## Example 1 (tidy)

```{r echo=FALSE}
df1 <- tribble(
  ~country,~year, ~cases, ~population,
"Afghanistan",  1999,    745,  19987071,
"Afghanistan",  2000,   2666,   20595360,
"Brazil",       1999,  37737,  172006362,
"Brazil",       2000,  80488,  174504898,
"China",        1999, 212258, 1272915272,
"China",        2000, 213766, 1280428583,
)
df1 |> kable() |> kable_styling(full_width = FALSE)
```

## Example 2 (long)

```{r echo=FALSE}
df1 |> pivot_longer(cases:population, names_to = "type", values_to = "count") |>
  kable() |> kable_styling(full_width = FALSE)
```

## Example 3

```{r echo=FALSE}
df1 |> unite("rate", cases:population, sep="/") |>
  kable() |> kable_styling(full_width = FALSE)
```

## Example 4

```{r echo=FALSE}
df1 |> select(-population) |>
  pivot_wider(names_from = "year", values_from = "cases") |>
  kable(caption="Cases") |> kable_styling(full_width = FALSE)
```

```{r echo=FALSE}
df1 |> select(-cases) |>
  pivot_wider(names_from = "year", values_from = "population") |>
  kable(caption="Population") |> kable_styling(full_width = FALSE)
```

## Where do data organization patterns come from?

* The way data are collected (population from one database, cases from another)

* The way data are recorded (one year at a time)

* Plans for how data will be interpreted or stored

* Concerns about readability (any data missing?) or compactness (storage, display)

* Habits


## What is good about tidy data?

* Easy to use `dplyr`: filter, group_by, summarize

* Easy to use `ggplot`: aesthetic mappings (x, y, color, shape) and facets

# Pivoting

Step by step examples of the transformations shown above

## Pivot longer {.smaller}

:::: {.columns}
::: {.column width="50%"}
```{r echo=FALSE}
df1 |>
  kable() |> kable_styling(full_width = FALSE)
```
:::
::: {.column width="50%"}
```{r}
df1 |> 
  pivot_longer(cases:population, 
               names_to = "type", 
               values_to = "count") |>
  kable() |> kable_styling(full_width = FALSE)
```
:::
::::

## Unite, mutate {.smaller}

```{r}
df1 |> mutate(rate_fraction = cases/population) |>
  unite("rate", cases:population, sep="/") |>
  kable() |> kable_styling(full_width = FALSE)
```

## Separate {.smaller}

```{r}
df1 |> unite("rate", cases:population, sep="/") |>
  separate(rate, into = c("cases", "population"), sep="/") |>
  kable() |> kable_styling(full_width = FALSE)
```

## Make two tables {.smaller}

```{r}
df1A <- df1 |> select(-population) |>
  pivot_wider(names_from = "year", values_from = "cases") 
df1A |> kable(caption="Cases") |> kable_styling(full_width = FALSE)
```

---

```{r echo=TRUE}
df1B <- df1 |> select(-cases) |>
  pivot_wider(names_from = "year", values_from = "population") 
df1B |> kable(caption="Population") |> kable_styling(full_width = FALSE)
```

## Combine two tables into one

```{r}
bind_rows(mutate(df1A, type = "cases"),
          mutate(df1B, type = "population")) |>
  kable() |> kable_styling(full_width = FALSE)
```

## Summary

* What and why of tidy data

* Longer vs wider format

* Common reshaping tasks


## Further reading

* Tidy Data ([Chapter 5](https://r4ds.hadley.nz/data-tidy)) in R4DS
* More examples in course notes

## Task

Practice these reshaping skills in the assigned Task.

