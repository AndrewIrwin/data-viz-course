---
title: "Making sliding maps"
author: "Andrew Irwin, a.irwin@dal.ca"
date: "2024-03-21"
format:
  revealjs:
    slide-number: true
    theme:  default
    chalkboard: true
    auto-animate: true
    scrollable: true
    code-block-border-left: true
    code-copy: false
    code-link: true
    history: false
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
# html widgets (leaflet) is experimental in xaringan. Try remotes::install_github('yihui/xaringan')
library(tidyverse)
library(leaflet)
library(ggmap)
library(kableExtra)
```

## Plan

* Kinds of maps (outline vs. tiles; interactive vs. static)

* Creating basic maps

* Adding points

* Shading areas

* Tile service providers

## Map libraries

* Dynamic: `leaflet` for drawing raster or tiled maps (leafletjs.com)

* Static: `ggmap` (part of tidyverse, tiles from several services)

* Both rely on internet services such as:
  * [OpenStreetMap](https://www.openstreetmap.org/#map=5/44.653/-63.413) 
  * [Google Maps](https://mapsplatform.google.com/maps-products/#static-maps)

## A basic map

```{r message=FALSE, warning=FALSE}
m <- leaflet() |>
  addTiles() |>  # Add default OpenStreetMap map tiles
  addMarkers(lng=-63.5932, lat=44.63697, popup="Math & Stats, Dalhousie U")
```

## A basic map

```{r fig.align="center", out.width="90%", echo=FALSE}
m  # Print the map
```


## Adding points

```{r message=FALSE, warning=FALSE}
cities <- read_csv("static/L28/selected_cities.csv")
head(cities) |> kable() |> kable_styling()
m2 <- leaflet(data = cities) |>
  addTiles() |>
  addCircleMarkers(~ lng, ~lat, label = ~city)
```

## Adding points

```{r fig.align="center", out.width="90%", echo=FALSE}
m2
```

## Colour regions

```{r message=FALSE}
library(geojsonio)
pal <- colorNumeric("viridis", NULL)  # make a viridis palette
canada <- geojson_read("https://gist.githubusercontent.com/mikelotis/2156d7c170d10d2c77cb79424fe2137d/raw/7a13748ed7ea5ba64876c77c53b6cb64dd5c3ab0/canada-province.geojson", what="sp")
my_values = runif(13, 0, 10) # random numbers between 0 and 10
m3 <- canada |>
  leaflet() |>
  addTiles() |>
  addPolygons(fillColor = ~ pal(my_values),
              weight = 1, color = "black") |>
  addLegend(pal = pal, values = my_values, opacity = 1.0)
```


## Colour regions

```{r fig.align="center", out.width="90%", echo=FALSE}
m3
```

## Other tiled map services

Google maps have more options, but you must sign up for an API key first. These examples are for anyone who wants to experiment with that option.

```{r stamen, eval=FALSE, cache=TRUE, message=FALSE, fig.align="center", out.width="90%", fig.retina=2}
mymap_terrain <- ggmap::get_googlemap(bbox = c(left = -130, bottom = 41, 
                                        right = -50, top = 66), 
                               zoom=5, maptype = "terrain")
m4 <- ggmap(mymap_terrain)  
```

See help for the package `ggmap` for more services (google maps, open street maps).

Start with a small integer for `zoom` and increase it if your map is fuzzy. (Don't burden yourself or a free service by downloading unnecessary data.)


## Add text and points

```{r eval=FALSE, message=FALSE}
my_points <- tibble(lat = c(43+57/60, 49+53/60),
                    lon = c(-59-55/60, -97-9/60),
                    label = c("Sable Is.", "Winnipeg")
)
m5 <- ggmap(mymap_terrain)  +
  geom_point(data = my_points, color="brown") + 
  geom_label(data = my_points, 
            aes(label=label), 
            fill = "#FFFFFF90",
            color = "black", nudge_y = 1.5)
```


## Summary

* Outline vs tiled (image) maps

* Make a basic map

* Add points and labels

* Fill regions with colour (requires polygons)

* There are several tile services, but free access comes and goes frequently




