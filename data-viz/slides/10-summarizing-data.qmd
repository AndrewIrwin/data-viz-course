---
title: "Summarizing data with dplyr"
author: "Andrew Irwin, a.irwin@dal.ca"
date: "2024-01-30"
format:
  revealjs:
    slide-number: true
    theme:  default
    chalkboard: true
    auto-animate: true
    scrollable: true
    code-block-border-left: true
    code-copy: false
    code-link: true
    history: false
---

```{r setup, include=FALSE}
library(tidyverse)
library(rmarkdown)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
```

## Transforming data

With a large dataset we commonly want to 

* Count observations in categories

* Compute means, standard deviations, and other statistics

* Compute derived quantities (ratios, change units) 



## dplyr examples

We will transform and reduce observations using 

* `mutate`

* `filter`

* `group_by`

* `summarize`

We will use the `ChickWeight` data in the `datasets` package.

## Data {.smaller}

```{r}
glimpse(ChickWeight)
```

## Use summarize to count observations

```{r}
ChickWeight |> summarize(count = n()) |> kable()
# ChickWeight |> count() # a handy abbreviation
```

## Count observations in groups

```{r}
ChickWeight |>
  group_by(Diet) |> 
  summarize(count = n(), .groups="drop") |>
  kable()
# ChickWeight |> count(Diet)
```


## Two grouping factors {.smaller}

```{r}
ChickWeight |>
  group_by(Diet, Chick) |> 
  summarize(count = n(), .groups = "drop") |>
  paged_table()
```

## Compute any function you want {.smaller}

```{r}
ChickWeight |>
  group_by(Chick, Diet) |> 
  summarize(count = n(), 
            max_time = max(Time), 
            median_weight = median(weight),
            increase_weight = max(weight) - min(weight),
            .groups="drop") |>
    paged_table()
```

## Use mutate to create new columns for each observation {.smaller}

```{r}
ChickWeight |> 
  mutate(growth = weight / Time) |>
  paged_table()
```

## Use mutate to create new columns for each observation {.smaller}

```{r}
ChickWeight |>
  mutate(growth = (weight-min(weight)) / Time) |>
  paged_table()
```

## Exclude observations with filter {.smaller}

```{r}
ChickWeight |> 
  filter(Time >= 10) |> 
  arrange(Time) |>
  paged_table()
```


## Exclude observations with filter {.smaller}

```{r}
ChickWeight |> 
  filter(Time == 10) |> 
  group_by(Diet) |> 
  summarize(weight_10 = mean(weight), .groups = "drop") |>
  kable()
```

## Combine all three

* Compute max weight for each chick and diet over all time.
* Filter to retain chicks that reach a target weight
* Count the number of observations per chick and diet treatment

```{r eval=FALSE}
ChickWeight |>
  group_by(Diet, Chick) |>
  mutate(max_weight = max(weight)) |>
  filter(max_weight > 110) |>
  group_by(Diet, Chick) |>
  summarize(n = n()) |>
  summarize(count_chicks = n(), .groups = "drop") |>
  kable()
```

## Combine all three

* Compute max weight for each chick and diet over all time.
* Filter out chicks that reach a target weight
* Count the number of observations per chick and diet treatment

```{r echo=FALSE, message=FALSE}
ChickWeight |> 
  group_by(Diet, Chick) |>
  mutate(max_weight = max(weight)) |>
  filter(max_weight > 110) |>
  group_by(Diet, Chick) |>
  summarize(n = n()) |>
  summarize(count_chicks = n(), .groups = "drop") |>
  kable()
```


## Summary

* Use `summarize` to compute functions (count, mean, ...) to reduce many observations to one

* Use `group_by` to split, summarize, and combine data

* Use `mutate` to define a new variable for all observations

* Use `filter` to select observations

## Bonus: dplyr is closely linked to SQL

```{r}
library(dbplyr)
memdb_frame(ChickWeight) |> count(Diet) |> show_query()
```

## dplyr and SQL

```{r}
memdb_frame(ChickWeight) |>  group_by(Diet, Chick) |>
  mutate(max_weight = max(weight)) |>
  filter(max_weight > 110) |>
  group_by(Diet, Chick) |>
  summarize(n = n()) |>
  summarize(count_chicks = n(), .groups = "drop") |> show_query()
```

## Further reading

* Lots more examples with different data in the course notes

* R4DS [Chapter 3 Data transformations](https://r4ds.hadley.nz/data-transform)

* [Cheatsheet for dplyr](https://www.rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf)

## Task

Practice these skills by doing the calculations in the associated Task.

